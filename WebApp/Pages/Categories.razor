@page "/categories"

@inject NavigationManager NavigationManager
@inject UseCases.IViewCategoriesUseCase ViewCategoryUseCase
@inject UseCases.IDeleteCategoryUseCase DeleteCategoryUseCase
<h3>Manage Categories</h3>

@if (categories != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Discription</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>@category.Description</td>
                    <td>
                        <button type="button" class="btn btn-primary" @onclick ="@(() => EditCategory(category))">Редактировать</button>
                        <button type="button" class="btn btn-primary" @onclick ="@(() => DeleteCategory(category.CategoryId))">Удалить</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<br/>
<button type="button" @onclick="OnClickAddCategory" class="btn btn-primary">Добавить категорию</button>
@code {
    private List<Category> categories;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategories();
    }
    private void OnClickAddCategory()
    {
        NavigationManager.NavigateTo("/addcategory");
    }
    private void EditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/editcategory/{category.CategoryId}");
    }
    private void DeleteCategory(int categoryId)
    {
        DeleteCategoryUseCase.Delete(categoryId);
        LoadCategories();
    }
    void LoadCategories()
        {
            categories = ViewCategoryUseCase.Execute()?.ToList();
        }

}
